{
	"name": "Data Science - Python (Rye/uv), R (renv), LaTeX (TinyTeX), Quarto",
	"image": "mcr.microsoft.com/devcontainers/base:debian",
	// Features to add to the dev container. More info: https://containers.dev/features.
	"features": {
		// "ghcr.io/devcontainers/features/python:1": {
		// 	"version": "latest"
		// },
		"ghcr.io/devcontainers/features/common-utils:2": {},
		"ghcr.io/va-h/devcontainers-features/uv:1": {},
		"ghcr.io/e-gineering/devcontainer-features/rye:1": {},
		"ghcr.io/devcontainers-contrib/features/ruff:1": {},
		"ghcr.io/rocker-org/devcontainer-features/r-apt:latest": {
			"useTesting": true,
			"vscodeRSupport": "full",
			"installDevTools": true,
			"installRadian": true,
			"installRMarkdown": true,
			"installVscDebugger": true
		},
		"ghcr.io/rocker-org/devcontainer-features/renv-cache:0": {},
		"ghcr.io/rocker-org/devcontainer-features/quarto-cli:1": {},
		"ghcr.io/michidk/devcontainers-features/typst:1": {},
		"ghcr.io/rocker-org/devcontainer-features/apt-packages:1": {
			"packages": "texlive-base"
		  },
		"ghcr.io/devcontainers-contrib/features/apt-get-packages:1": {
			"packages": "perl, wget, libfontconfig1"
		}
	},
	"overrideFeatureInstallOrder": [
		"ghcr.io/rocker-org/devcontainer-features/r-apt"
	],
	// Options for the postCreateCommand script.
	"containerEnv": {
		"SETUP_PY_VENV": "false",  // Setup Python virtual environment, recommend doing this manually with Rye
		"SETUP_R_RENV": "true", // Setup R renv, recommend doing this manually with renv initially
		"INSTALL_PY_DEFAULTS": "false", // Install default data science Python packages, if no requirements.txt, recommend false
		"INSTALL_R_DEFAULTS": "false"   // Install default data science R packages, if no renv.lock, recommend false
		// "INSTALL_TINYTEX": "false", // Install TinyTeX, recommend true to use Quarto
	},
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "bash ./.devcontainer/postCreateCommand.sh  ${INSTALL_TINYTEX} ${SETUP_PY_VENV} ${SETUP_R_RENV} ${INSTALL_PY_DEFAULTS} ${INSTALL_R_DEFAULTS}",
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [
		8888,  // Jupyter notebook default port
		4000,  // Quarto preview default port
		8787   // RStudio Server (optional, if you decide to use it)
	  ],
	  
	  "portsAttributes": {
		"8888": {
		  "label": "Jupyter",
		  "onAutoForward": "notify"
		},
		"4000": {
		  "label": "Quarto Preview",
		  "onAutoForward": "openPreview"
		},
		"8787": {
		  "label": "RStudio Server",
		  "onAutoForward": "notify"
		}
	  },
	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Set *default* container specific settings.json values on container create.
			"settings": {
				"[python]": {
					// "defaultInterpreterPath": "/opt/conda/bin/python",
					"editor.defaultFormatter": "ms-python.black-formatter",
					"editor.formatOnType": true,
					"editor.formatOnSave": true
				},
				"[jupyter]": {
					"themeMatplotlibPlots": true,
					"widgetScriptSources": [
						"unpkg.com",
						"jsdelivr.com"
					]
				},
				"[r]": {
					"rterm.linux": "/usr/local/bin/radian",
					"r.bracketedPaste": true,
					"r.plot.useHttpgd": true,
					"[r]": {
						"editor.wordSeparators": "`~!@#%$^&*()-=+[{]}\\|;:'\",<>/?"
					}
				},
				"quarto.preview.browser": "vscode",
				"quarto.render.previewType": "internal"
			},
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-toolsai.jupyter",
				"ms-python.python",
				"ms-python.vscode-pylance",
				"ms-toolsai.jupyter",
				"ms-toolsai.jupyter-renderers",
				"quarto.quarto"
				"reditorsupport.r",
				"rdebugger.r-debugger",
				"christian-kohler.path-intellisense",
				"yzhang.markdown-all-in-one"
			]
		}
	},
	// Set `remoteUser` to `root` to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}